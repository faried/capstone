// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const Verifier = artifacts.require("Verifier");

contract("Verifier", accounts => {
    const deployer = accounts[9];
    const pjs = require("../../zokrates/code/square/proof.json");
    const proof = pjs.proof;
    const inputs = pjs.inputs;

    describe("test with correct proof", () => {
        beforeEach(async () => {
            this.contract = await Verifier.new({from: deployer});
        });

        it("verify input", async () => {
            const result = await this.contract.verifyTx.call(proof.a, proof.b, proof.c, inputs);

            assert.equal(result, true, "failed to verify inputs");
        });
    });

    describe("test with incorrect proof", () => {
        beforeEach(async function () {
            this.contract = await Verifier.new({from: deployer});
        });

        it("bad input values should fail", async () => {
            let copy = JSON.parse(JSON.stringify(inputs));

            copy[1] = "0x4";

            let result = await this.contract.verifyTx.call(proof.a, proof.b, proof.c, copy);
            assert.equal(result, false, "bad input did not break contract");
        });
    });
});
